expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    # add tls configuration
    domain: napps.dev.nuxeo.com
    exposer: Ingress
    http: true
    tlsacme: true
    tlsSecretName: napps-tls
    urltemplate: '"{{.Service}}-{{.Namespace}}.{{.Domain}}"'

cleanup:
  Args:
    - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded

nuxeo:
  fullnameOverride: preview
  nuxeo:
    podLabels:
      branch: "$BRANCH_NAME"
      team: napps
      resource: pod
      usage: preview
    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: |-
          nginx.ingress.kubernetes.io/proxy-body-size: 0
          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;
      labels:
        branch: "$BRANCH_NAME"
        team: napps
        resource: service
        usage: preview
    image:
      repository: ${DOCKER_REGISTRY}/${ORG}/nuxeo-coldstorage
      tag: ${VERSION}
      pullPolicy: Always
    persistence:
      enabled: disable
    packages: nuxeo-web-ui-3.1.0-rc.059 amazon-s3-online-storage /packages/nuxeo-coldstorage-package-*.zip
    customParams: |-
      org.nuxeo.connect.url=https://nos-preprod-connect.nuxeocloud.com/nuxeo/site/
      # AWS
      nuxeo.aws.accessKeyId=${env:AWS_ACCESS_KEY}
      nuxeo.aws.secretKey=${env:AWS_ACCESS_SECRET}
      nuxeo.aws.region=${env:AWS_REGION}
      nuxeo.s3storage.bucket_prefix=${env:AWS_S3_BUCKET_PREFIX}
      nuxeo.s3storage.bucket=${env:AWS_S3_BUCKET}
      # COLDSTORAGE
      nuxeo.aws.glacier.bucket=${env:AWS_S3_GLACIER_BUCKET}
      nuxeo.aws.glacier.bucket_prefix=${env:AWS_S3_BUCKET_PREFIX}
      nuxeo.url=${PREVIEW_URL}/nuxeo
      nuxeo.cors.urls=${PREVIEW_URL}
    customEnvs:
      - name: NUXEO_CLID
        valueFrom:
          secretKeyRef:
            name: instance-clid-preprod
            key: CLID
      - name: AWS_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: access_key_id
      - name: AWS_ACCESS_SECRET
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: secret_access_key
      - name: AWS_REGION
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: region
      - name: AWS_S3_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: coldstorage.bucket
      - name: AWS_S3_GLACIER_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: coldstorage.bucket.glacier
      - name: AWS_S3_BUCKET_PREFIX
        value: $BUCKET_PREFIX
    tolerations:
      - key: team
        operator: Equal
        value: napps
        effect: NoSchedule
    nodeSelector:
      team: napps
    resources:
      requests:
        cpu: 2
        memory: 2Gi
      limits:
        cpu: 4
        memory: 4Gi
  mongodb:
    deploy: true
    useStatefulSet: false
    persistence:
      enabled: false
    labels:
      branch: $BRANCH_NAME
      resource: deployment
      team: napps
      usage: preview
    podLabels:
      branch: $BRANCH_NAME
      resource: pod
      team: napps
      usage: preview
    tolerations:
      - key: team
        operator: Equal
        value: napps
        effect: NoSchedule
    nodeSelector:
      team: napps
tags:
  mongodb: true

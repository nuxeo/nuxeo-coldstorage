expose:
  Annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-delete-policy: hook-succeeded
  config:
    # add tls configuration
    domain: napps.dev.nuxeo.com
    exposer: Ingress
    http: true
    tlsacme: true
    tlsSecretName: napps-tls
    urltemplate: '"{{.Service}}-{{.Namespace}}.{{.Domain}}"'
  Image: "ghcr.io/jenkins-x/exposecontroller"
  ImageTag: "2.3.118"

cleanup:
  Args:
    - --cleanup
  Annotations:
    helm.sh/hook: pre-delete
    helm.sh/hook-delete-policy: hook-succeeded

nuxeo:
  fullnameOverride: preview
  nuxeo:
    podLabels:
      branch: "10-10"
      team: napps
      resource: pod
      usage: preview
    service:
      annotations:
        fabric8.io/expose: "true"
        fabric8.io/ingress.annotations: |-
          nginx.ingress.kubernetes.io/proxy-body-size: 0
          nginx.ingress.kubernetes.io/server-snippet: ignore_invalid_headers off;
      labels:
        branch: "10-10"
        team: napps
        resource: service
        usage: preview
    image:
      repository: docker-registry.napps.dev.nuxeo.com/nuxeo/nuxeo-coldstorage
      tag: 10.0.1-rc.7
      pullPolicy: Always
    persistence:
      enabled: disable
    packages: nuxeo-dam nuxeo-web-ui nuxeo-management-rest-api amazon-s3-online-storage nuxeo-jsf-ui /packages/nuxeo-coldstorage-package.zip
    livenessProbe:
      initialDelaySeconds: 420
      periodSeconds: 20
      successThreshold: 1
      failureThreshold: 5
      timeoutSeconds: 10
    readinessProbe:
        periodSeconds: 20
        initialDelaySeconds: 420
        successThreshold: 1
        timeoutSeconds: 10
        failureThreshold: 5
    customParams: |-
      # AWS
      nuxeo.core.binarymanager=org.nuxeo.ecm.blob.s3.S3BlobProvider
      nuxeo.aws.accessKeyId=${env:AWS_ACCESS_KEY}
      nuxeo.aws.secretKey=${env:AWS_ACCESS_SECRET}
      nuxeo.aws.region=${env:AWS_REGION}
      nuxeo.s3storage.bucket=${env:AWS_S3_BUCKET}
      nuxeo.s3storage.bucket_prefix=${env:AWS_S3_BUCKET_PREFIX}/
      # COLDSTORAGE
      nuxeo.aws.glacier.bucket=${env:AWS_S3_GLACIER_BUCKET}
      nuxeo.aws.glacier.bucket_prefix=${env:AWS_S3_BUCKET_PREFIX}/
    customEnvs:
      - name: NUXEO_CLID
        valueFrom:
          secretKeyRef:
            name: instance-clid
            key: CLID
      - name: AWS_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: access_key_id
      - name: AWS_ACCESS_SECRET
        valueFrom:
          secretKeyRef:
            name: aws-iam-user-credentials
            key: secret_access_key
      - name: AWS_REGION
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: region
      - name: AWS_S3_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: coldstorage.bucket
      - name: AWS_S3_GLACIER_BUCKET
        valueFrom:
          secretKeyRef:
            name: aws-config-napps
            key: coldstorage.bucket.glacier
      - name: AWS_S3_BUCKET_PREFIX
        value: nuxeo-coldstorage-10-10-44
    tolerations:
      - key: team
        operator: Equal
        value: napps
        effect: NoSchedule
    nodeSelector:
      team: napps
  mongodb:
    deploy: true
    useStatefulSet: false
    persistence:
      enabled: false
    labels:
      branch: "10-10"
      resource: deployment
      team: napps
      usage: preview
    podLabels:
      branch: "10-10"
      resource: pod
      team: napps
      usage: preview
    tolerations:
      - key: team
        operator: Equal
        value: napps
        effect: NoSchedule
    nodeSelector:
      team: napps
tags:
  mongodb: true
